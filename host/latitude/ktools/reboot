#!/bin/bash
set -e -u -x
. .lib.sh
check_args() {
    : ${HOST_KERNEL:=$1}
    : ${HOST_APPEND:=$2}
    host_kernel > /dev/null
    if ! host_kernel_installed > /dev/null
    then
	echo "${HOST_KERNEL} not installed"
	echo "run ./kbuild.sh ${HOST_KERNEL}"
	exit 1
    fi
    KERNELRELEASE=$(host_kernel_installed)
    APPEND=$(cat "${HOST_APPEND}")
    BOOT_IMAGE="/boot/vmlinuz-${KERNELRELEASE}"
    INITRD="/boot/initrd.img-${KERNELRELEASE}"
    test -f "${BOOT_IMAGE}"
    test -f "${INITRD}"
    BOOT_IMAGE="/$(basename ${BOOT_IMAGE})"
    INITRD="/$(basename ${INITRD})"
    CMDLINE="BOOT_IMAGE=${BOOT_IMAGE} ${APPEND}"
}
main() {
    check_args "${@}"
    CURRENT_CMDLINE="$(cat /proc/cmdline)"
    if [ "${CMDLINE}" != "${CURRENT_CMDLINE}" ]
    then
	# Add/Edit /etc/grub.d/99_RecordSchedLog (using HOST_KERNEL and HOST_APPEND)
	cat_grubd_RecordSchedLog | sudo tee /etc/grub.d/99_RecordSchedLog
	sudo chmod +x /etc/grub.d/99_RecordSchedLog
	# Run grub-mkconfig -o /boot/grub/grub.cfg
	sudo grub-mkconfig -o /boot/grub/grub.cfg
	# Find RecordSchedLogEntry in /boot/grub/grub.cfg (using scripts/grub-list)
	RecordSchedLogEntry=$(scripts/grub-list | grep RecordSchedLogEntry | awk '{print $1}')
	test -n "${RecordSchedLogEntry}"
	# Run grub-reboot RecordSchedLogEntry
	sudo grub-reboot "${RecordSchedLogEntry}"
	sudo reboot
    fi
}

cat_grubd_RecordSchedLog() {
cat <<EOF2
cat <<EOF
menuentry 'RecordSchedLogEntry' --class gnu-linux --class gnu --class os \\\$menuentry_id_option 'RecordSchedLogEntry' {
	  load_video
	  set gfxpayload=keep
	  insmod gzio
	  insmod part_gpt
	  insmod fat
	  echo 'Loading ${BOOT_IMAGE} ${APPEND}'
	  linux ${BOOT_IMAGE} ${APPEND}
	  echo 'Loading ${INITRD}'
	  initrd /intel-ucode.img ${INITRD}
}
EOF
EOF2
}

main "${@}"
